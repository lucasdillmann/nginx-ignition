name: release-pipeline
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/setup-go@v5
        with:
          go-version: 1.25.1
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          driver-opts: |
            image=moby/buildkit:master
            network=host
          platforms: linux/amd64,linux/arm64
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: npm cache download
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/frontend/node_modules
          key: npm-cache
      - name: go cache download
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/.go
          key: go-cache
      - name: Resolve version number from tag
        id: tag
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
      - name: Build and release
        env:
          GOPATH: ${{ github.workspace }}/.go
          GOMODCACHE: ${{ github.workspace }}/.go/pkg/mod
          GOTOOLCHAIN: ""
        run: make build-release VERSION=${{ steps.tag.outputs.VERSION }}
      - name: npm cache upload
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}/frontend/node_modules
          key: npm-cache
      - name: go cache upload
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}/.go
          key: go-cache
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.tag.outputs.VERSION }}
          tag_name: ${{ steps.tag.outputs.VERSION }}
          body: "Docker image: dillmann/nginx-ignition:${{ steps.tag.outputs.VERSION }}"
          files: |
            build/nginx-ignition.*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
