name: main-pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/setup-go@v4
        with:
          go-version: 1.23
      - name: npm cache
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: npm-cache
          restore-keys: npm-cache
      - name: go cache
        uses: actions/cache@v4
        with:
          path: /home/runner/go/pkg/mod
          key: go-cache
          restore-keys: go-cache
      - name: Prettier
        working-directory: frontend
        run: |
          npm install && \
          npx prettier --check src
      - name: Eslint
        working-directory: frontend
        run: |
          npm install && \
          npx eslint src
      - name: Sonarqube
        uses: SonarSource/sonarqube-scan-action@v4.2.1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/setup-go@v4
        with:
          go-version: 1.23
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          driver-opts: |
            image=moby/buildkit:master
            network=host
          platforms: linux/amd64,linux/arm64
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: npm cache
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: npm-cache
          restore-keys: npm-cache
      - name: go cache
        uses: actions/cache@v4
        with:
          path: /home/runner/go/pkg/mod
          key: go-cache
          restore-keys: go-cache
      - name: Frontend build
        working-directory: frontend
        run: |
          npm install && \
          npm run build
      - name: Backend build
        env:
          GOOS: linux
          CGO_ENABLED: "0"
        run: |
          go work sync && \
          GOARCH=amd64 go build -o build/linux/amd64 application/main.go && \
          GOARCH=arm64 go build -o build/linux/arm64 application/main.go
      - name: Build and push Docker images
        run: |
          docker buildx build \
            --tag dillmann/nginx-ignition:snapshot \
            --platform linux/amd64,linux/arm64 \
            --push .
