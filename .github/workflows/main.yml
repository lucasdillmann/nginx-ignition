#TODO: Update the pipeline to work with Go
#name: main-pipeline
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#
#jobs:
#  quality-checks:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      - uses: actions/setup-java@v4
#        with:
#          java-version: 21
#          distribution: temurin
#      - name: Sonar cache
#        uses: actions/cache@v4
#        with:
#          path: ~/.sonar/cache
#          key: sonar-cache
#          restore-keys: sonar-cache
#      - name: Gradle cache
#        uses: actions/cache@v4
#        with:
#          path: ~/.gradle
#          key: gradle-cache
#          restore-keys: gradle-cache
#      - name: npm cache
#        uses: actions/cache@v4
#        with:
#          path: ~/frontend/node_modules
#          key: npm-cache
#          restore-keys: npm-cache
#      - name: Sonar
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: ./gradlew sonar
#      - name: Detekt
#        run: ./gradlew detekt
#      - name: Prettier
#        run: ./gradlew :frontend:prettierCheck
#      - name: Eslint
#        run: ./gradlew :frontend:eslint
#
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-java@v4
#        with:
#          java-version: 21
#          distribution: temurin
#      - name: Gradle cache
#        uses: actions/cache@v4
#        with:
#          path: ~/.gradle
#          key: gradle-cache
#          restore-keys: gradle-cache
#      - name: npm cache
#        uses: actions/cache@v4
#        with:
#          path: ~/frontend/node_modules
#          key: npm-cache
#          restore-keys: npm-cache
#      - uses: docker/setup-qemu-action@v3
#      - uses: docker/setup-buildx-action@v3
#        with:
#          driver: docker-container
#          driver-opts: |
#            image=moby/buildkit:master
#            network=host
#          platforms: linux/amd64,linux/arm64
#      - uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Gradle assemble
#        run: ./gradlew assemble
#      - name: Build and push Docker images
#        run: |
#          docker buildx build \
#            --tag dillmann/nginx-ignition:snapshot \
#            --platform linux/amd64,linux/arm64 \
#            --push .
